{%- import "_macros.jinja" as macros -%}
{% set whitelisted_hosts = [
  "fonts.googleapis.com",
  "fonts.gstatic.com",
  "www.googleapis.com",
  "www.gravatar.com",
] -%}
{% if odoo_version <= 15 -%}
{% set whitelisted_hosts = "cdnjs.cloudflare.com" + whitelisted_hosts -%}
{% endif -%}

services:
  odoo_proxy:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    stop_grace_period: 0s
    depends_on:
      - odoo
    networks: &public
      default:
      public:
    ports:
      - "{{ macros.version_major(odoo_version) }}899:6899"
      - "{{ macros.version_major(odoo_version) }}069:8069"
      - "{{ macros.version_major(odoo_version) }}072:8072"
    environment:
      PORT: "6899 8069 8072"
      TARGET: odoo

  odoo:
    {%- if odoo_oci_image %}
    image: {{ odoo_oci_image }}:{{ macros.version_minor(odoo_version) }}
    {%- endif %}
    build:
      context: ./odoo
      args:
        {%- if odoo_version >= 11 %}
        DB_VERSION: "{{ postgres_version or 'latest' }}"
        {%- endif %}
        ODOO_VERSION: "{{ macros.version_minor(odoo_version) }}"
        # To aggregate in development, use `setup-devel.yaml`
        AGGREGATE: "false"
        # Export these variables to own files created by odoo in your filesystem
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
        # No need for this in development
        PIP_INSTALL_ODOO: "false"
        CLEAN: "false"
        COMPILE: "false"
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-devel}"
      DEBUGPY_ENABLE: "${DOODBA_DEBUGPY_ENABLE:-0}"
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONOPTIMIZE: ""
      PYTHONPATH: /opt/odoo/custom/src/odoo
      SMTP_PORT: "1025"
      # To avoid installing demo data export DOODBA_WITHOUT_DEMO=all
      WITHOUT_DEMO: "${DOODBA_WITHOUT_DEMO-true}"

      PGDATABASE: &dbname {{ postgres_dbname }}
      PGUSER: &dbuser "{{ postgres_username }}"
      DB_FILTER: ".*"
      PROXY_MODE: "{% if odoo_proxy %}true{% else %}false{% endif %}"
      LIST_DB: "true"
      ADMIN_PASSWORD: {{ odoo_admin_password }}
    tty: true
    volumes:
      - filestore:/var/lib/odoo:z
      - ./odoo/custom:/opt/odoo/custom:rw,z
      - ./odoo/auto:/opt/odoo/auto:rw,z
    depends_on:
      - db
      {% for host in whitelisted_hosts -%}
      - proxy_{{ host|replace(".", "_") }}
      {% endfor -%}
      - smtp
    command:
      - odoo
      - --limit-memory-soft=0
      {%- if odoo_version >= 10 %}
      - --limit-time-real-cron=9999999
      {%- endif %}
      - --limit-time-real=9999999
      - --workers=0
      {%- if odoo_version == 9 %}
      - --dev
      {%- elif odoo_version >= 10 %}
      - --dev=reload,qweb,werkzeug,xml
      {%- endif %}

  {% if postgres_version -%}
  db:
    image: {{ postgres_image }}
    shm_size: 2gb
    command: >
      -c work_mem=512MB
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: *dbuser
      # Why locale C? PostgreSQL is "under-optimized" with the use of
      # LIKE queries using wildcards (LIKE 'foo%') in conjunction with btree
      # indexes, when not using locale C.
      # See:
      #   - https://github.com/odoo/odoo/pull/25196#issuecomment-396683972
      #   - https://www.postgresql.org/docs/16/indexes-types.html#INDEXES-TYPES-BTREE
      POSTGRES_INITDB_ARGS: "--locale=C --encoding=UTF8"
      POSTGRES_PASSWORD: odoopassword
    networks: *public
    ports:
      - "{{ macros.version_major(odoo_version) }}432:5432"
    volumes:
      - db:/var/lib/postgresql/data:z
  {%- endif %}

  smtp:
    image: axllent/mailpit
    networks: *public
    ports:
      - "{{ macros.version_major(odoo_version) }}025:8025"

  # Whitelist outgoing traffic for tests, reports, etc.
{%- for host in whitelisted_hosts %}
  proxy_{{ host|replace(".", "_") }}:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    stop_grace_period: 0s
    networks:
      default:
        aliases:
          - {{ host }}
      public:
    environment:
      TARGET: {{ host }}
      PRE_RESOLVE: 1
{% endfor %}
networks:
  default:
    internal: true
  public:

volumes:
  filestore:
  db:
