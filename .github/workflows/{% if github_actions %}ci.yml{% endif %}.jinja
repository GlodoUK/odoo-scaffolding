name: CI

concurrency:
  group: {% raw %}ci-${{ github.ref }}{% endraw %}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - master
      - develop
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'odoo/custom/src/private/**'
              - 'odoo/custom/src/addons.yaml'
              - 'odoo/custom/src/repos.yaml'

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: "0"

      - uses: actions/setup-python@v2
        with:
          # The pylint-odoo version we use here does not support python 3.10
          # https://github.com/OCA/oca-addons-repo-template/issues/80
          # We also need to pin to an older version of python for older odoo versions
          # where we are not using black > 21. Older black versions won't work with
          # Python 3.9.8+, and we can't bump black without reformatting.
          python-version: "3.9.7"

      - name: Get python version
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit
        run: |
          pre-commit run --from-ref="origin/${{ github.base_ref }}" --to-ref=HEAD --show-diff-on-failure --color=always
      - name: Check that all files generated by pre-commit are in git
        run: |
          newfiles="$(git ls-files --others --exclude-from=.gitignore)"
          if [ "$newfiles" != "" ] ; then
              echo "Please check-in the following files:"
              echo "$newfiles"
              exit 1
          fi

  test:
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: "0"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup pipx
        run: |
          python3 -m pip install --user pipx
          pipx install docker-compose
          pipx install invoke
          pipx install pre-commit
          pipx ensurepath

      - name: Build image & git-aggregate
        run: |
          invoke img-build
          invoke git-aggregate

      - name: Run tests
        run: |
          {% raw %}invoke test-changed -b "origin/${{ github.base_ref }}"{% endraw %}
